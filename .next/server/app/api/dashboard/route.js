"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/dashboard/route";
exports.ids = ["app/api/dashboard/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_LocalCodes_Checkmate_checkers_webapp_src_app_api_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/dashboard/route.ts */ \"(rsc)/./src/app/api/dashboard/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/dashboard/route\",\n        pathname: \"/api/dashboard\",\n        filename: \"route\",\n        bundlePath: \"app/api/dashboard/route\"\n    },\n    resolvedPagePath: \"C:\\\\LocalCodes\\\\Checkmate\\\\checkers-webapp\\\\src\\\\app\\\\api\\\\dashboard\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_LocalCodes_Checkmate_checkers_webapp_src_app_api_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/dashboard/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkYXNoYm9hcmQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmRhc2hib2FyZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmRhc2hib2FyZCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDTG9jYWxDb2RlcyU1Q0NoZWNrbWF0ZSU1Q2NoZWNrZXJzLXdlYmFwcCU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q0xvY2FsQ29kZXMlNUNDaGVja21hdGUlNUNjaGVja2Vycy13ZWJhcHAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzhCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdml0ZV9yZWFjdF9zaGFkY25fdHMvPzFjNDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcTG9jYWxDb2Rlc1xcXFxDaGVja21hdGVcXFxcY2hlY2tlcnMtd2ViYXBwXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGRhc2hib2FyZFxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZGFzaGJvYXJkL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZGFzaGJvYXJkXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9kYXNoYm9hcmQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxMb2NhbENvZGVzXFxcXENoZWNrbWF0ZVxcXFxjaGVja2Vycy13ZWJhcHBcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcZGFzaGJvYXJkXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9kYXNoYm9hcmQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/dashboard/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/dashboard/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var _lib_seed__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/seed */ \"(rsc)/./src/lib/seed.ts\");\n// src/app/api/dashboard/route.ts\n\n\n\n // Import the processing function\nasync function GET(request) {\n    try {\n        const db = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_2__.connectToDB)();\n        const checkers = db.collection(\"checkers\");\n        const votes = db.collection(\"votes\");\n        // Process any pending votes before showing dashboard\n        await (0,_lib_seed__WEBPACK_IMPORTED_MODULE_3__.processVotingLogic)(votes, checkers);\n        // For now, hardcode the checker ID - you'll want to get this from session/auth later\n        const checkerId = \"665eaaaa0000000000000001\";\n        // Get the checker's data (now without voteHistory)\n        const checker = await checkers.findOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(checkerId)\n        });\n        if (!checker) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Checker not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Get recent votes where this checker participated for activity feed\n        const recentVotesWithThisChecker = await votes.find({\n            \"votes.checkerId\": new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(checkerId),\n            status: \"completed\"\n        }).sort({\n            processedAt: -1\n        }) // Sort by when they were processed\n        .limit(5).toArray();\n        // Calculate stats from checker document (now updated by processVotingLogic)\n        const totalVotes = checker.totalVotes || 0;\n        const correctVotes = checker.correctVotes || 0;\n        const accuracy = totalVotes > 0 ? Math.round(correctVotes / totalVotes * 100) : 0;\n        // Determine certification status\n        const isNewChecker = totalVotes < 50 || accuracy < 60; // Assuming messagesSent requirement is met\n        // Create recent activity based on completed votes\n        const recentActivity = [];\n        // Add recent votes from completed votes\n        recentVotesWithThisChecker.forEach((voteDoc)=>{\n            // Find this checker's vote in the votes array\n            const myVote = voteDoc.votes.find((v)=>v.checkerId.toString() === checkerId);\n            if (myVote) {\n                const wasCorrect = voteDoc.finalResult && voteDoc.finalResult.includes(myVote.vote);\n                recentActivity.push({\n                    message: `${wasCorrect ? \"✅\" : \"❌\"} Verified \"${voteDoc.content.substring(0, 30)}...\"`,\n                    date: formatRelativeTime(voteDoc.processedAt || voteDoc.timestamp),\n                    type: \"vote\"\n                });\n            }\n        });\n        // Add achievement if accuracy milestone reached\n        if (accuracy >= 60 && accuracy < 70) {\n            recentActivity.push({\n                message: \"\\uD83C\\uDFAF Achieved 60% accuracy milestone\",\n                date: \"Recently\",\n                type: \"achievement\"\n            });\n        } else if (accuracy >= 70 && accuracy < 80) {\n            recentActivity.push({\n                message: \"\\uD83C\\uDFAF Achieved 70% accuracy milestone\",\n                date: \"Recently\",\n                type: \"achievement\"\n            });\n        } else if (accuracy >= 80 && accuracy < 90) {\n            recentActivity.push({\n                message: \"\\uD83C\\uDFAF Achieved 80% accuracy milestone\",\n                date: \"Recently\",\n                type: \"achievement\"\n            });\n        } else if (accuracy >= 90) {\n            recentActivity.push({\n                message: \"\\uD83C\\uDFC6 Achieved 90% accuracy milestone - Expert level!\",\n                date: \"Recently\",\n                type: \"achievement\"\n            });\n        }\n        // Dashboard data structure\n        const dashboardData = {\n            isNewChecker,\n            userData: {\n                name: checker.name,\n                // New checker stats\n                votes: totalVotes,\n                accuracy: accuracy,\n                messagesSent: 1,\n                // Certified checker stats (same as above for now, but could be different)\n                lifetimeVotes: totalVotes,\n                lifetimeAccuracy: accuracy,\n                engagementScore: Math.min(95, totalVotes * 2 + accuracy),\n                correctVotes: correctVotes,\n                recentActivity: recentActivity.slice(0, 3)\n            }\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(dashboardData);\n    } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch dashboard data\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Helper function to format relative time\nfunction formatRelativeTime(date) {\n    const now = new Date();\n    const targetDate = typeof date === \"string\" ? new Date(date) : date;\n    const diff = now.getTime() - targetDate.getTime();\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    if (minutes < 1) {\n        return \"Just now\";\n    } else if (minutes < 60) {\n        return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"} ago`;\n    } else if (hours < 24) {\n        return `${hours} hour${hours !== 1 ? \"s\" : \"\"} ago`;\n    } else if (days < 7) {\n        return `${days} day${days !== 1 ? \"s\" : \"\"} ago`;\n    } else {\n        return targetDate.toLocaleDateString();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/dashboard/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDB: () => (/* binding */ connectToDB)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// lib/mongodb.ts\n\nconst uri = process.env.MONGODB_URI || \"mongodb://localhost:27017\";\nconst dbName = \"checkmate\";\nlet cachedClient = null;\nlet cachedDb = null;\nasync function connectToDB() {\n    if (cachedDb) return cachedDb;\n    const client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri);\n    await client.connect();\n    cachedClient = client;\n    cachedDb = client.db(dbName);\n    return cachedDb;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUJBQWlCO0FBQ3lCO0FBRTFDLE1BQU1DLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQ0MsV0FBVyxJQUFJO0FBQ3ZDLE1BQU1DLFNBQVM7QUFFZixJQUFJQyxlQUFtQztBQUN2QyxJQUFJQyxXQUFzQjtBQUVuQixlQUFlQztJQUNwQixJQUFJRCxVQUFVLE9BQU9BO0lBRXJCLE1BQU1FLFNBQVMsSUFBSVQsZ0RBQVdBLENBQUNDO0lBQy9CLE1BQU1RLE9BQU9DLE9BQU87SUFFcEJKLGVBQWVHO0lBQ2ZGLFdBQVdFLE9BQU9FLEVBQUUsQ0FBQ047SUFFckIsT0FBT0U7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3ZpdGVfcmVhY3Rfc2hhZGNuX3RzLy4vc3JjL2xpYi9tb25nb2RiLnRzPzUzYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL21vbmdvZGIudHNcclxuaW1wb3J0IHsgTW9uZ29DbGllbnQsIERiIH0gZnJvbSBcIm1vbmdvZGJcIjtcclxuXHJcbmNvbnN0IHVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJIHx8IFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxN1wiO1xyXG5jb25zdCBkYk5hbWUgPSBcImNoZWNrbWF0ZVwiO1xyXG5cclxubGV0IGNhY2hlZENsaWVudDogTW9uZ29DbGllbnQgfCBudWxsID0gbnVsbDtcclxubGV0IGNhY2hlZERiOiBEYiB8IG51bGwgPSBudWxsO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbm5lY3RUb0RCKCk6IFByb21pc2U8RGI+IHtcclxuICBpZiAoY2FjaGVkRGIpIHJldHVybiBjYWNoZWREYjtcclxuXHJcbiAgY29uc3QgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSk7XHJcbiAgYXdhaXQgY2xpZW50LmNvbm5lY3QoKTtcclxuXHJcbiAgY2FjaGVkQ2xpZW50ID0gY2xpZW50O1xyXG4gIGNhY2hlZERiID0gY2xpZW50LmRiKGRiTmFtZSk7XHJcblxyXG4gIHJldHVybiBjYWNoZWREYjtcclxufVxyXG4iXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJ1cmkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJkYk5hbWUiLCJjYWNoZWRDbGllbnQiLCJjYWNoZWREYiIsImNvbm5lY3RUb0RCIiwiY2xpZW50IiwiY29ubmVjdCIsImRiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/seed.ts":
/*!*************************!*\
  !*** ./src/lib/seed.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processVotingLogic: () => (/* binding */ processVotingLogic),\n/* harmony export */   seedDatabase: () => (/* binding */ seedDatabase)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n\n\nasync function seedDatabase() {\n    const db = await (0,_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectToDB)();\n    const checkers = db.collection(\"checkers\");\n    const votes = db.collection(\"votes\");\n    // ALWAYS process voting logic on every deployment\n    await processVotingLogic(votes, checkers);\n    // Only seed if database is empty\n    const existing = await checkers.findOne({});\n    if (existing) return; // Don't re-seed if data exists\n    const now = new Date();\n    const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    const twoDaysAgo = new Date(now.getTime() - 48 * 60 * 60 * 1000);\n    const threeDaysAgo = new Date(now.getTime() - 72 * 60 * 60 * 1000);\n    const twelveHoursAgo = new Date(now.getTime() - 12 * 60 * 60 * 1000);\n    const voteDocs = [\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"64f1a1b1c1d1e1f1a1b1c1d1\"),\n            content: \"\\uD83D\\uDEA8 URGENT: New COVID variant spreads through 5G towers! Share this...\",\n            timestamp: twoDaysAgo.toISOString(),\n            sender: \"Unknown WhatsApp User\",\n            screenshot: \"https://images.unsplash.com/photo-1581091226825-a6a2a5aee158?w=400&h=300&fit=crop\",\n            category: \"False\",\n            status: \"pending\",\n            finalResult: null,\n            votes: [\n                {\n                    checkerId: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000001\"),\n                    vote: \"False\",\n                    votedAt: new Date(twoDaysAgo.getTime() + 30 * 60 * 1000)\n                }\n            ],\n            aiNote: {\n                summary: \"This message contains multiple false claims linking COVID-19 to 5G...\",\n                references: [\n                    \"WHO COVID-19 fact sheet\",\n                    \"FDA 5G safety guidelines\"\n                ]\n            }\n        },\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"64f1a1b1c1d1e1f1a1b1c1d2\"),\n            content: \"Government announces new tax relief for families earning under $50k...\",\n            timestamp: twelveHoursAgo.toISOString(),\n            sender: \"News Channel\",\n            screenshot: \"https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=400&h=300\",\n            category: \"Pending\",\n            status: \"pending\",\n            finalResult: null,\n            votes: [],\n            aiNote: {\n                summary: \"This appears to be legitimate news but requires verification...\",\n                references: [\n                    \"Government press releases\",\n                    \"Tax authority website\"\n                ]\n            }\n        },\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"64f1a1b1c1d1e1f1a1b1c1d3\"),\n            content: \"BREAKING: Celebrity caught in scandal, photos leaked...\",\n            timestamp: oneDayAgo.toISOString(),\n            sender: \"Gossip Group\",\n            screenshot: \"https://images.unsplash.com/photo-1533750349088-cd871a92f312?w=400&h=300\",\n            category: \"Misleading\",\n            status: \"pending\",\n            finalResult: null,\n            votes: [\n                {\n                    checkerId: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000002\"),\n                    vote: \"Misleading\",\n                    votedAt: new Date(oneDayAgo.getTime() + 2 * 60 * 60 * 1000)\n                },\n                {\n                    checkerId: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000003\"),\n                    vote: \"Misleading\",\n                    votedAt: new Date(oneDayAgo.getTime() + 4 * 60 * 60 * 1000)\n                }\n            ],\n            aiNote: {\n                summary: \"This contains unverified claims and potentially manipulated content...\",\n                references: [\n                    \"Entertainment fact-checkers\",\n                    \"Image verification tools\"\n                ]\n            }\n        },\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"64f1a1b1c1d1e1f1a1b1c1d4\"),\n            content: \"\\uD83D\\uDCB0 Get rich quick with crypto! Guaranteed 500% return!\",\n            timestamp: threeDaysAgo.toISOString(),\n            sender: \"InvestmentGroup\",\n            screenshot: \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=400&h=300\",\n            category: \"Pending\",\n            status: \"pending\",\n            finalResult: null,\n            votes: [],\n            aiNote: {\n                summary: \"This message exhibits common scam indicators such as high return guarantees...\",\n                references: [\n                    \"SEC Crypto Scam Advisory\",\n                    \"Cointelegraph analysis\"\n                ]\n            }\n        },\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"64f1a1b1c1d1e1f1a1b1c1d5\"),\n            content: \"\\uD83D\\uDEA8 URGENT: This is a post to show voted and not completed\",\n            timestamp: twelveHoursAgo.toISOString(),\n            sender: \"Unknown WhatsApp User\",\n            screenshot: \"https://images.unsplash.com/photo-1581091226825-a6a2a5aee158?w=400&h=300&fit=crop\",\n            category: \"False\",\n            status: \"pending\",\n            finalResult: null,\n            votes: [\n                {\n                    checkerId: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000001\"),\n                    vote: \"False\",\n                    votedAt: new Date(twelveHoursAgo.getTime() + 30 * 60 * 1000),\n                    aiRating: \"great\",\n                    comment: \"Well-researched political analysis with proper citations and balanced perspective.\",\n                    tags: [\n                        \"Politics\",\n                        \"Technology\",\n                        \"Urgent\"\n                    ]\n                }\n            ],\n            aiNote: {\n                summary: \"This message contains multiple false claims linking COVID-19 to 5G...\",\n                references: [\n                    \"WHO COVID-19 fact sheet\",\n                    \"FDA 5G safety guidelines\"\n                ]\n            }\n        }\n    ];\n    await votes.insertMany(voteDocs);\n    // Updated checkers without voteHistory\n    await checkers.insertMany([\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000001\"),\n            name: \"Zack\",\n            phoneNumber: \"+123456789\",\n            correctVotes: 0,\n            totalVotes: 0\n        },\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000002\"),\n            name: \"Jane Doe\",\n            phoneNumber: \"+987654321\",\n            correctVotes: 0,\n            totalVotes: 0\n        },\n        {\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_0__.ObjectId(\"665eaaaa0000000000000003\"),\n            name: \"John Smith\",\n            phoneNumber: \"+555123456\",\n            correctVotes: 0,\n            totalVotes: 0\n        }\n    ]);\n    console.log(\"Database seeded successfully!\");\n    // Process voting logic again after seeding to handle any newly seeded votes\n    await processVotingLogic(votes, checkers);\n}\nasync function processVotingLogic(votesCollection, checkersCollection) {\n    const now = new Date();\n    const twentyFourHoursAgo = now.getTime() - 24 * 60 * 60 * 1000;\n    // Find all pending votes that are older than 24 hours\n    const pendingVotes = await votesCollection.find({\n        status: \"pending\",\n        timestamp: {\n            $lt: new Date(twentyFourHoursAgo).toISOString()\n        }\n    }).toArray();\n    console.log(`Found ${pendingVotes.length} votes to process...`);\n    for (const vote of pendingVotes){\n        let finalResult;\n        let majorityVote = null;\n        const status = \"completed\";\n        if (vote.votes && vote.votes.length > 0) {\n            // Calculate majority vote\n            const voteCounts = {};\n            vote.votes.forEach((v)=>{\n                voteCounts[v.vote] = (voteCounts[v.vote] || 0) + 1;\n            });\n            // Find the vote option with the highest count\n            const sortedVotes = Object.entries(voteCounts).sort((a, b)=>b[1] - a[1]);\n            majorityVote = sortedVotes[0][0];\n            const majorityCount = sortedVotes[0][1];\n            const totalVotes = vote.votes.length;\n            const percentage = Math.round(majorityCount / totalVotes * 100);\n            finalResult = `${majorityVote} - ${percentage}% consensus`;\n            // Update checker stats for all voters\n            for (const voterVote of vote.votes){\n                const checkerId = voterVote.checkerId;\n                const isCorrect = voterVote.vote === majorityVote;\n                // Create the update query with the correct type\n                const updateQuery = {\n                    $inc: {\n                        totalVotes: 1\n                    }\n                };\n                // If the vote matches the majority, also increment correctVotes\n                if (isCorrect) {\n                    updateQuery.$inc.correctVotes = 1;\n                }\n                await checkersCollection.updateOne({\n                    _id: checkerId\n                }, updateQuery);\n                console.log(`Updated checker ${checkerId}: +1 total vote${isCorrect ? \", +1 correct vote\" : \"\"}`);\n            }\n        } else {\n            // No votes received, set as Pass\n            finalResult = \"Pass - No votes received\";\n        }\n        // Update the vote document\n        await votesCollection.updateOne({\n            _id: vote._id\n        }, {\n            $set: {\n                status: status,\n                finalResult: finalResult,\n                processedAt: now\n            }\n        });\n        console.log(`Processed vote ${vote._id}: ${finalResult}`);\n    }\n    if (pendingVotes.length === 0) {\n        console.log(\"No votes to process - all votes are either recent or already completed.\");\n    }\n}\n// Export the processing function for use elsewhere\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/seed.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Froute&page=%2Fapi%2Fdashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Froute.ts&appDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CLocalCodes%5CCheckmate%5Ccheckers-webapp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();